# -*- coding: utf-8 -*-
"""dataset_2-9_mnist.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jMz4pYj_uCxO0RnnCxX9ftCV2L7ijjA_

# Dataset MNIST
"""

import numpy as np
import pandas as pd
import matplotlib as mpl
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_openml

"""Cargar el conjunto de datos MNIST"""

# Load data from https://www.openml.org/d/554
X, y = fetch_openml('mnist_784', version=1, return_X_y=True)

"""Convertir *X* a numpy array, e *y* a entero ya que fetch_openml devuelve etiquetas como string"""

y = y.astype(int)
X = X.to_numpy()

digit = np.zeros((10, 10), dtype=int)

counts = np.zeros(10, dtype=int)

for dataset_index in range(len(y)):
    label = y[dataset_index]

    # Verificar si ya hemos encontrado los primeros 10 ejemplos de este d√≠gito
    if counts[label] < 10:
        digit[label, counts[label]] = dataset_index
        counts[label] += 1

    # Si ya hemos encontrado 10 ejemplos de cada d√≠gito, terminamos el bucle
    if np.all(counts == 10):
        break

print(digit)

fig, axs = plt.subplots(10, 10, figsize=(6, 6))

for i in range(10):
    for j in range(10):
        pos = digit[i, j]  # Obtener el √≠ndice del d√≠gito almacenado
        buffer = X[pos].reshape(28, 28)  # Convertir la fila en una imagen de 28x28
        axs[i, j].imshow(buffer, cmap=mpl.cm.binary, interpolation='nearest')  # Mostrar la imagen
        axs[i, j].axis("off")  # Ocultar los ejes

plt.show()

"""---

üî• **Semillero en Electr√≥nica Aplicada** ([SEA](https://sites.google.com/usco.edu.co/sea/inicio))

**Referencias**
*   [OpenML mnist](https://www.openml.org/search?type=data&sort=runs&id=554&status=active) Informaci√≥n adicional de la base datos.
"""